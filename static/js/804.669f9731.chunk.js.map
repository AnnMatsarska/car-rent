{"version":3,"file":"static/js/804.669f9731.chunk.js","mappings":"4PAUaA,EAAc,WACzB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEpBI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAYd,EAAAA,EAAAA,IAAYe,EAAAA,KAE9BC,EAAAA,EAAAA,YAAU,WACRd,GACEe,EAAAA,EAAAA,GAAa,CACXT,KAAAA,EACAU,MAAO,KAGb,GAAG,CAAChB,EAAUM,KAEdQ,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLd,GAASiB,EAAAA,EAAAA,MACX,CACF,GAAG,CAACjB,IAYJ,OANAc,EAAAA,EAAAA,YAAU,WACJjB,EAAKqB,OAAS,KAAO,GACvBP,GAAc,EAElB,GAAG,CAACd,KAGFsB,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAAAF,SACLxB,EAAK2B,KAAI,SAAAC,GACR,OAAOH,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAAcD,IAAKA,GAAbA,EAAIE,GAC3B,MAEDf,IAAaU,EAAAA,EAAAA,KAACM,EAAAA,EAAM,KACnBlB,GAAcb,EAAKqB,OAAS,IAC5BI,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CAACC,KAAK,SAASC,QAnBL,WACrBxB,GAAQ,SAAAyB,GAAI,OAAKA,EAAQ,CAAC,GAC5B,EAiBoDX,SAAC,gBAMvD,EChDA,EARoB,WAClB,OACEC,EAAAA,EAAAA,KAAAW,EAAAA,SAAA,CAAAZ,UACEC,EAAAA,EAAAA,KAAC1B,EAAW,KAGlB,C","sources":["components/Cars/CarsCatalog.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCarsThunk } from 'redux/car/operation';\nimport { resetStateCars } from 'redux/car/carSlice';\n\nimport { CarItem } from '../CarItem/CarItem';\nimport { CarList, Container, Button } from './CarsCatalog.styled';\nimport { selectCars, selectIsLoading } from 'redux/car/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const CarsCatalog = () => {\n  const cars = useSelector(selectCars);\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n\n  const [isLastPage, setIsLastPage] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(\n      getCarsThunk({\n        page,\n        limit: 12,\n      })\n    );\n  }, [dispatch, page]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(resetStateCars());\n    };\n  }, [dispatch]);\n\n  const handleLoadMore = () => {\n    setPage(prev => (prev += 1));\n  };\n\n  useEffect(() => {\n    if (cars.length % 12 !== 0) {\n      setIsLastPage(true);\n    }\n  }, [cars]);\n\n  return (\n    <Container>\n      <CarList>\n        {cars.map(car => {\n          return <CarItem key={car.id} car={car} />;\n        })}\n      </CarList>\n      {isLoading && <Loader />}\n      {!isLastPage && cars.length > 0 && (\n        <Button type=\"button\" onClick={handleLoadMore}>\n          Load more\n        </Button>\n      )}\n    </Container>\n  );\n};\n","import { CarsCatalog } from 'components/Cars/CarsCatalog';\n\nconst CatalogPage = () => {\n  return (\n    <>\n      <CarsCatalog />\n    </>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["CarsCatalog","cars","useSelector","selectCars","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","isLastPage","setIsLastPage","isLoading","selectIsLoading","useEffect","getCarsThunk","limit","resetStateCars","length","_jsxs","Container","children","_jsx","CarList","map","car","CarItem","id","Loader","Button","type","onClick","prev","_Fragment"],"sourceRoot":""}